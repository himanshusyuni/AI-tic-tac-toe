const fs = require('fs');
const path = require('path');
const { format } = require('@fast-csv/format');

async function toCsv(data, type, res) {
    if (!data || data.length === 0) {
        return res.status(400).send('No data to export');
    }

    const timestamp = new Date().toISOString().replace(/[-:.]/g, '');
    const downloadPath = path.join(__dirname, 'output', `${type}_${timestamp}.csv`);

    // Create a writable stream
    const writeStream = fs.createWriteStream(downloadPath);

    // Create CSV stream
    const csvStream = format({ headers: true });

    csvStream.pipe(writeStream).on('finish', () => {
        res.setHeader('Content-Disposition', `attachment; filename="${path.basename(downloadPath)}"`);
        res.setHeader('Content-Type', 'text/csv');

        const fileStream = fs.createReadStream(downloadPath);
        fileStream.pipe(res);

        fileStream.on('end', () => {
            fs.unlinkSync(downloadPath);
            res.end();
        });

        fileStream.on('error', (err) => {
            console.error('File Stream Error:', err);
            res.status(500).send('Error reading file');
        });
    });

    data.forEach(item => csvStream.write(item));
    csvStream.end();
}
